<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李亮红的个人博客</title>
  <subtitle>简简单单，开开心心过好每一天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lilianghong.com/"/>
  <updated>2016-10-16T16:45:42.000Z</updated>
  <id>http://www.lilianghong.com/</id>
  
  <author>
    <name>lilianghong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git学习笔记</title>
    <link href="http://www.lilianghong.com/2016/10/17/Git-learning-notes/"/>
    <id>http://www.lilianghong.com/2016/10/17/Git-learning-notes/</id>
    <published>2016-10-16T16:17:32.000Z</published>
    <updated>2016-10-16T16:45:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建版本库："><a href="#创建版本库：" class="headerlink" title="创建版本库："></a>创建版本库：</h2><p>用于显示当前目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ pwd</div></pre></td></tr></table></figure></p>
<p>初始化一个git仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init</div></pre></td></tr></table></figure></p>
<p>添加文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git add &lt;file&gt;  </div><div class="line">$ git add readme.txt</div></pre></td></tr></table></figure></p>
<p>提交到Git仓库<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit</div></pre></td></tr></table></figure></p>
<p>提交时添加注释<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;wrote a readme file&quot; 	（-m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。）</div></pre></td></tr></table></figure></p>
<blockquote>
<p>添加文件到Git仓库，分两步：</p>
<ul>
<li>第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；</file></li>
<li>第二步，使用命令git commit，完成。</li>
</ul>
</blockquote>
<h2 id="时光机穿梭"><a href="#时光机穿梭" class="headerlink" title="时光机穿梭"></a>时光机穿梭</h2><p>查看工作区的状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git status</div></pre></td></tr></table></figure></p>
<p>查看被修改文件的修改内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git diff</div></pre></td></tr></table></figure></p>
<h2 id="版本回退："><a href="#版本回退：" class="headerlink" title="版本回退："></a>版本回退：</h2><p>该命令显示从最近到最远的提交日志，如果嫌多，可以加参数“–pretty=oneline”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git log</div></pre></td></tr></table></figure></p>
<p>查看文件具体信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat file</div></pre></td></tr></table></figure></p>
<p>指向哪个版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset --hard commid_id</div></pre></td></tr></table></figure></p>
<p>查看命令历史  例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git reflog</div><div class="line">$ git log --pretty=oneline</div></pre></td></tr></table></figure></p>
<p>查看文件read.me文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cat readme.txt</div></pre></td></tr></table></figure></p>
<p>回到上一版本（HEAD表示当前版本，HEAD^表示上一个版本，上上一个版本就是HEAD^^,以此类推。）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset --hrad HEAD^</div></pre></td></tr></table></figure></p>
<h2 id="工作区和暂存区："><a href="#工作区和暂存区：" class="headerlink" title="工作区和暂存区："></a>工作区和暂存区：</h2><h3 id="撤销修改："><a href="#撤销修改：" class="headerlink" title="撤销修改："></a>撤销修改：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -- file</div></pre></td></tr></table></figure>
<p>例如：<code>git checkout -- readme.txt</code>,就是把readme.txt文件在工作区的修改全部撤销，这里有两种情况：</p>
<ul>
<li>readme.txt 自修改后还没放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；</li>
<li>readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区的状态。<br>总之，就是让这个文件回到最近一次git commit  或 git add的状态。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git  reset HEAD file</div></pre></td></tr></table></figure>
<p>作用：可以把暂存的区的修改撤销掉（unstage）,重新放回工作区。</p>
<p>git reset命令既可以退回版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。</p>
<p>小结：</p>
<ul>
<li>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- file</code>。</li>
<li>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>git reset HEAD file</code>，就回到了场景1，第二步按场景1操作。</li>
<li>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</li>
</ul>
<h3 id="删除文件："><a href="#删除文件：" class="headerlink" title="删除文件："></a>删除文件：</h3><ul>
<li><p>确实要从版本库中删除该文件（以test.txt为例）<br>命令行：<code>git rm  ,然后git commit</code><br>例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git rm test.txt</div><div class="line">$ git commit -m &quot;remove test.txt&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>删除错了，还想要。<br>命令行：git checkout<br>例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout -- test.txt</div></pre></td></tr></table></figure>
</li>
</ul>
<p>如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</p>
<h2 id="分支管理："><a href="#分支管理：" class="headerlink" title="分支管理："></a>分支管理：</h2><h3 id="创建与合并分支："><a href="#创建与合并分支：" class="headerlink" title="创建与合并分支："></a>创建与合并分支：</h3><p>命令行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch  查看分支</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch &lt;name&gt; 创建分支</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout &lt;name&gt; 切换分支</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout  -b &lt;name&gt; 创建+切换分支</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git merge &lt;name&gt; 合并某分支到当前分支</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -d &lt;name&gt; 删除分支</div></pre></td></tr></table></figure>
<p>例如：（以分支dev 为例）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git branch dev 创建dev分支</div><div class="line">git checkout dev 切换到dev分支</div><div class="line">git checkout  -b dev  创建+切换 dev 分支</div><div class="line">git merge dev 合并dev分支到当前分支</div><div class="line">git branch -d  dev  删除dev分支</div></pre></td></tr></table></figure></p>
<h3 id="解决冲突："><a href="#解决冲突：" class="headerlink" title="解决冲突："></a>解决冲突：</h3><p>步骤：</p>
<ul>
<li>解决冲突，把代码折中处理。</li>
<li>删除  &lt;&lt;&lt;&lt;&lt;&lt;&lt;  和  =======    和 &gt;&gt;&gt;&gt;&gt;&gt;&gt;</li>
<li>git add  </li>
<li>git commit -m “描述文字”</li>
<li>再merge</li>
<li>删除分支</li>
</ul>
<h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><p>命令行：git log<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">例如：$ git log --graph --pretty=oneline --abbrev-commit</div></pre></td></tr></table></figure></p>
<p>分支管理策略：<br>一般合并都用Fast forward 模式，也可以强制禁用Fast forward 模式：<br>命令行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git merge --no-ff -m &quot;merge with no-ff&quot; dev</div></pre></td></tr></table></figure></p>
<ul>
<li>分支分类:</li>
<li>master分支是主分支，因此要时刻与远程同步；</li>
<li>dev分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；</li>
<li>bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；</li>
<li>feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。</li>
</ul>
<h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git checkout -b feature/test origin/feature/test   把远程分支down到本地</div><div class="line">等同于</div><div class="line">git checkout -b feature/test    先在本地建一个分支</div><div class="line">git pull origin feature/test	把远程分支down下来</div></pre></td></tr></table></figure>
<h2 id="常用git命令："><a href="#常用git命令：" class="headerlink" title="常用git命令："></a>常用git命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git status</div><div class="line">git add</div><div class="line">git commit -m + &quot;描述语言&quot;</div><div class="line">git pull --rebase origin master</div><div class="line">git push origin master</div><div class="line">git clone git 地址</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建版本库：&quot;&gt;&lt;a href=&quot;#创建版本库：&quot; class=&quot;headerlink&quot; title=&quot;创建版本库：&quot;&gt;&lt;/a&gt;创建版本库：&lt;/h2&gt;&lt;p&gt;用于显示当前目录&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo博客安装</title>
    <link href="http://www.lilianghong.com/2016/10/16/hexo-blog-install/"/>
    <id>http://www.lilianghong.com/2016/10/16/hexo-blog-install/</id>
    <published>2016-10-16T15:33:28.000Z</published>
    <updated>2016-10-16T16:10:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="安装node-js-需要下载安装软件"><a href="#安装node-js-需要下载安装软件" class="headerlink" title="安装node.js (需要下载安装软件)"></a>安装node.js (需要下载安装软件)</h3><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><blockquote>
<p>git和github是不一样的，git只是终端，github是储存代码的远程仓库，安装github需要安装软件</p>
</blockquote>
<h2 id="添加SSH-Key。"><a href="#添加SSH-Key。" class="headerlink" title="添加SSH-Key。"></a>添加SSH-Key。</h2><h3 id="设置你的用户名密码："><a href="#设置你的用户名密码：" class="headerlink" title="设置你的用户名密码："></a>设置你的用户名密码：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.email &quot;bu.ru@qq.com&quot;</div><div class="line">git config --global user.name &quot;bruce-sha&quot;</div></pre></td></tr></table></figure>
<h3 id="生成密钥："><a href="#生成密钥：" class="headerlink" title="生成密钥："></a>生成密钥：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;bu.ru@qq.com&quot;</div></pre></td></tr></table></figure>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/201610161476633567863.jpg?imageView2/0/format/jpg" alt="201610161476633567863.jpg"></p>
<blockquote>
<p>tips:</p>
</blockquote>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663361865153.jpg?imageView2/0/format/jpg" alt="20161017147663361865153.jpg"></p>
<blockquote>
<p>如果有两个密匙，要把配置文件更改下，如下：</p>
</blockquote>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663374724349.jpg?imageView2/0/format/jpg" alt="20161017147663374724349.jpg"></p>
<h3 id="打开-github-pub-粘贴里面的内容"><a href="#打开-github-pub-粘贴里面的内容" class="headerlink" title="打开 github.pub,粘贴里面的内容"></a>打开 github.pub,粘贴里面的内容</h3><p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663378073236.jpg?imageView2/0/format/jpg" alt="20161017147663378073236.jpg"></p>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/2016101714766338073213.jpg?imageView2/0/format/jpg" alt="2016101714766338073213.jpg"></p>
<p>如果页面在这的话，点击头像的setting设置，到：<br><img src="http://7xqmjb.com1.z0.glb.clouddn.com/201610171476633851331.jpg?imageView2/0/format/jpg" alt="201610171476633851331.jpg"><br><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663388556851.jpg?imageView2/0/format/jpg" alt="20161017147663388556851.jpg"></p>
<p>设置好的话，可以输入 ssh -T git@github.com,验证一下，中间需要你输入yes或者点击enter键。<br>出现一下证明设置成功：<br><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663391998254.jpg?imageView2/0/format/jpg" alt="20161017147663391998254.jpg"></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre><code>npm install -g hexo
苹果下面是 sudo  npm install -g hexo
出现界面
</code></pre><p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663395285019.jpg?imageView2/0/format/jpg" alt="20161017147663395285019.jpg"><br>不报错就是成功~</p>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>执行init命令初始化hexo到你指定的目录：</p>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663400745584.jpg?imageView2/0/format/jpg" alt="20161017147663400745584.jpg"></p>
<p>进入到相应的目录，然后新建文件夹。</p>
<p>进入到用户文件夹里面的”.ssh”文件<br>pwd</p>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663404615144.jpg?imageView2/0/format/jpg" alt="20161017147663404615144.jpg"></p>
<p>上一步就是执行init命令初始化hexo到你指定的目录：</p>
<h2 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h2><p>cd 到你的init目录，执行如下命令</p>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663406986342.jpg?imageView2/0/format/jpg" alt="20161017147663406986342.jpg"></p>
<h2 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h2><p>hexo server</p>
<p><img src="http://7xqmjb.com1.z0.glb.clouddn.com/20161017147663410054454.jpg?imageView2/0/format/jpg" alt="20161017147663410054454.jpg"><br>这个窗口不能关，然后打开<a href="http://localhost:4000/页面，就ok了。" target="_blank" rel="external">http://localhost:4000/页面，就ok了。</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境安装&quot;&gt;&lt;a href=&quot;#环境安装&quot; class=&quot;headerlink&quot; title=&quot;环境安装&quot;&gt;&lt;/a&gt;环境安装&lt;/h2&gt;&lt;h3 id=&quot;安装node-js-需要下载安装软件&quot;&gt;&lt;a href=&quot;#安装node-js-需要下载安装软件&quot; class=&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.lilianghong.com/2016/08/17/hello-world/"/>
    <id>http://www.lilianghong.com/2016/08/17/hello-world/</id>
    <published>2016-08-17T08:51:15.000Z</published>
    <updated>2016-08-17T08:51:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
